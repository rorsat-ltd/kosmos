apiVersion: apps/v1
kind: ConfigMap
metadata:
  name: kosmos-config
data:
  RUST_LOG: "info"
  LISTEN_ADDRESS: "[::]:10800"
  NAT64_PREFIX: "2a0d:1a40:7900:6::/64"
  SOURCE_IPS: "12.47.179.11,81.187.83.184"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kosmos
    part: server
  name: kosmos-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kosmos
      part: server
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: '["default-ipv6-ippool"]'
      labels:
        app: kosmos
        part: server
    spec:
      containers:
        - envFrom:
            - configMap:
                name: kosmos-config
            - secretRef:
                name: kosmos-config
          image: as207960/kosmos:(version)
          imagePullPolicy: IfNotPresent
          name: server
          command: ["/kosmos_server"]
          ports:
            - containerPort: 10800
              protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kosmos-server
spec:
  podSelector:
    matchLabels:
      app: kosmos
      part: server
  policyTypes:
    - Ingress
  ingress:
    - ports:
        - protocol: TCP
          port: 10800
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kosmos
    part: http
  name: kosmos-http
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kosmos
      part: http
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: '["default-ipv6-ippool"]'
      labels:
        app: kosmos
        part: http
    spec:
      containers:
        - env:
            - name: RUST_LOG
              value: "info"
            - name: LISTEN_ADDRESS
              value: "[::]:80"
          envFrom:
            - secretRef:
                name: kosmos-config
          image: as207960/kosmos:(version)
          imagePullPolicy: IfNotPresent
          name: server
          command: ["/kosmos_http"]
          ports:
            - containerPort: 80
              protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kosmos-http
spec:
  podSelector:
    matchLabels:
      app: kosmos
      part: http
  policyTypes:
    - Ingress
  ingress:
    - ports:
        - protocol: TCP
          port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kosmos
    part: worker
  name: kosmos-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kosmos
      part: worker
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: '["default-ipv6-ippool"]'
      labels:
        app: kosmos
        part: worker
    spec:
      containers:
        - env:
            - name: RUST_LOG
              value: "info"
          envFrom:
            - secretRef:
                name: kosmos-config
          image: as207960/kosmos:(version)
          imagePullPolicy: IfNotPresent
          name: server
          command: ["/kosmos_worker"]
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kosmos-worker
spec:
  podSelector:
    matchLabels:
      app: kosmos
      part: worker
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: Service
metadata:
  name: kosmos-server
  labels:
    app: kosmos
    part: server
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app: kosmos
    part: server
  ports:
    - port: 10800
      targetPort: 10800
      protocol: TCP
      name: sbd
---
apiVersion: v1
kind: Service
metadata:
  name: kosmos-http
  labels:
    app: kosmos
    part: http
spec:
  selector:
    app: kosmos
    part: http
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kosmos-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    cert-manager.io/cluster-issuer: gts
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - kosmos.iridium.as207960.ltd.uk
      secretName: kosmos-tls
  rules:
    - host: kosmos.iridium.as207960.ltd.uk
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kosmos-http
                port:
                  number: 80